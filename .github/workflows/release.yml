name: release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v0.4.4

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up CI Image Metadata
      id: docker_meta_ci
      uses: crazy-max/ghaction-docker-meta@v3.6.0
      with:
        images: registry.scalecity.io/opensource/bookstack-dev
        tag-sha: true
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Read VERSION file
      id: getversion
      run: echo "::set-output name=version::$(cat VERSION)"
    - name: Build and push Dev
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        build-args: |
          BOOKSTACK_VERSION=${{ steps.getversion.outputs.version }}
        push: false
        tags: |
          ${{ steps.docker_meta_ci.outputs.tags }}
        labels: ${{ steps.docker_meta_ci.outputs.labels }}
        cache-from: type=registry,ref=registry.scalecity.io/opensource/bookstack-dev:main
        outputs: type=docker,dest=/tmp/image-bookstack.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: image-bookstack-main
        path: /tmp/image-bookstack.tar
  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: image-bookstack-main
        path: /tmp
    - name: Load Docker image
      run: |
        docker load --input /tmp/image-bookstack.tar
        docker image ls -a
  push:
    runs-on: ubuntu-20.04
    needs: e2e
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name:  Set up Docker Hub Image Metadata
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v3.6.0
      with:
        images: registry.scalecity.io/opensource/bookstack,registry.scalecity.io/opensource/docker-bookstack
        tag-semver: |
          {{version}}
          {{major}}.{{minor}}
          {{major}}.{{minor}}.{{patch}}
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: image-bookstack-main
        path: /tmp
    - name: Load Docker image
      run: |
        docker load --input /tmp/image-bookstack.tar
        docker image ls -a
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to ScaleCity.io Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry.scalecity.io
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    - name: Read VERSION file
      id: getversion
      run: echo "::set-output name=version::$(cat VERSION)"
    - name: Build and Push main
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        build-args: |
          BOOKSTACK_VERSION=${{ steps.getversion.outputs.version }}
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
  create-release:
    runs-on: ubuntu-20.04
    needs: push
    steps:
      # To use this repository's private action, you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
